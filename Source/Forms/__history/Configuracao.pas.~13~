unit Configuracao;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Buttons;

type
  TConfiguracoes = class(TForm)
    BtPesquisa: TButton;
    EditCaminhoGitBash: TEdit;
    OpenDialog: TOpenDialog;
    BitBtn1: TBitBtn;
    procedure BtPesquisaClick(Sender: TObject);
    procedure BitBtn1Click(Sender: TObject);
  private
    { Private declarations }
    Config: string;
  public
    { Public declarations }
  end;

var
  Configuracoes: TConfiguracoes;

implementation

{$R *.dfm}

procedure TConfiguracoes.BitBtn1Click(Sender: TObject);
var
  StreamWriter: TStreamWriter;
begin
  Config := 'Config.txt';
  try
    // Cria um StreamWriter para escrever no arquivo
    StreamWriter := TStreamWriter.Create(Config);

    // Escreve o conteúdo do Memo no arquivo
    StreamWriter.Write(EditCaminhoGitBash.Text);
  finally
    // Libera o StreamWriter
    StreamWriter.Free;
    Configuracoes.Close;
  end;
end;

procedure TConfiguracoes.BtPesquisaClick(Sender: TObject);
begin
OpenDialog := TOpenDialog.Create(Self);
  try
    OpenDialog.Filter := 'Arquivos Executáveis (*.exe)|*.exe';
    OpenDialog.Title := 'Selecione um Arquivo Executável';

    if OpenDialog.Execute then
    begin
      // Verificar se o arquivo selecionado é um executável (.exe)
      if SameText(ExtractFileExt(OpenDialog.FileName), '.exe') then
      begin
        EditCaminhoGitBash.Text := OpenDialog.FileName;
      end
      else
      begin
        ShowMessage('Por favor, selecione um arquivo executável (.exe).');
      end;
    end;
  finally
    OpenDialog.Free;
  end;
end;
end.
